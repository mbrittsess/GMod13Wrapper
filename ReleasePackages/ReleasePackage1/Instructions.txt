New Vanillin Release Package 1 Release Notes:

* In order to build a library using Vanillin for GMod, all one needs to do is build the Lua library as normal, but at the link step, replace the "lua51.lib" import library with the "lua51.lib" static library provided with Vanillin. 
  The usual method I've used for doing this is to replace the /LIBPATH: directive giving the path to the import library with a /LIBPATH: directive giving the path to my static library instead. Another alternative would be to give the /LIBPATH: for my static library *before* the /LIBPATH: for the import library.

* As this is a release version, sources are now included. I'd recommend just using the 'lua51.lib' included with the package, though. 
** If you want to build one yourself, though, you'll need to make sure that 'lua' is an executeable file reachable from the environment you execute the build script from.
** I only have a batch file available with this release for a build script; I'm no good with makefiles (yet). It will need to be modified slightly to fit your environment, but only at the level of editing the paths for certain directories and programs - see the comments in the file itself.
** The file 'lauxlib.h' is directly taken from the Lua 5.1.4 sources.
** The "WRAPPROGRESS" tags above each function, and the 'progress.lua' file, are used for my own benefit, they serve no purpose in the actual build process.

* To use the sample libraries that are included, put the *contents* of the "BinaryModules" folder into "garrysmod\garrysmod\lua\bin\" and put the contents of the "LuaModules" folder into "garrysmod\garrysmod\lua\includes\modules\" folder.

* Vanillin's functions should behave correctly from within their own libraries for all basic behavior. They are not guaranteed to provide the same behavior if you go poking around inside them with the debug library, or to work correctly with values provided from other libraries. Nevertheless, I've worked hard to make sure that they should work, within reason, with values from other libraries, and they *should* work correctly with values provided by other libraries that are using the same version of Vanillin.

* Certain functions do not work correctly, and never will. None of them will crash your process (well, they *shouldn't*) but most will throw an error. They are:
** lua_newstate() --Actually, this one will not throw an error, but instead always returns NULL, which *is* correct behavior.
** lua_close()
** lua_atpanic()
** lua_checkstack() --This one always returns true, unless you give it nonsensical input.
** lua_dump()
** lua_getallocf()
** lua_setallocf()

* Certain functions do not work correctly, but might in the future. As above, none of them will crash your process but most of them will throw an error.
** lua_newthread()
** lua_xmove()
** lua_tothread()
** lua_yield()
** lua_resume()
** lua_status()

* Other than the listed ones, I've worked hard to make sure that all functions provide the same behavior that they do in the normal Lua 5.1.4 build, referring to both the Reference Manual and the source code itself at times. Please let me know of any discrepancies in their behavior; this is, after all, the purpose of the Test Releases. You can contact me at facepunch.com as 'Infectious'.